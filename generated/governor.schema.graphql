type Account @entity {
	id: Bytes!
	asGovernor: Governor
	proposed: [Proposal!]! @derivedFrom(field: "proposer")
	voted: [VoteReceipt!]! @derivedFrom(field: "voter")
	proposedCalls: [ProposalCall!]! @derivedFrom(field: "target")
	events: [Event!]! @derivedFrom(field: "emitter")
}
type Governor @entity(immutable: true) {
	id: Bytes!
	asAccount: Account!
	mode: String
	proposals: [Proposal!]! @derivedFrom(field: "governor")
	proposalCreated: [ProposalCreated!]! @derivedFrom(field: "governor")
	proposalQueued: [ProposalQueued!]! @derivedFrom(field: "governor")
	proposalExecuted: [ProposalExecuted!]! @derivedFrom(field: "governor")
	proposalCanceled: [ProposalCanceled!]! @derivedFrom(field: "governor")
	votecast: [VoteCast!]! @derivedFrom(field: "governor")
}
type Proposal @entity {
	id: ID!
	governor: Governor!
	proposalId: BigInt!
	proposer: Account!
	startBlock: BigInt!
	endBlock: BigInt!
	description: String!
	eta: BigInt
	canceled: Boolean!
	queued: Boolean!
	executed: Boolean!
	calls: [ProposalCall!]! @derivedFrom(field: "proposal")
	supports: [ProposalSupport!]! @derivedFrom(field: "proposal")
	receipts: [VoteReceipt!]! @derivedFrom(field: "proposal")
	proposalCreated: [ProposalCreated!]! @derivedFrom(field: "proposal")
	proposalQueued: [ProposalQueued!]! @derivedFrom(field: "proposal")
	proposalExecuted: [ProposalExecuted!]! @derivedFrom(field: "proposal")
	proposalCanceled: [ProposalCanceled!]! @derivedFrom(field: "proposal")
	votecast: [VoteCast!]! @derivedFrom(field: "proposal")
}
type ProposalCall @entity(immutable: true) {
	id: ID!
	proposal: Proposal!
	index: Int!
	target: Account!
	value: BigDecimal!
	signature: String!
	calldata: Bytes!
}
type ProposalSupport @entity(immutable: true) {
	id: ID!
	proposal: Proposal!
	support: Int!
	weight: BigInt!
	votes: [VoteReceipt!]! @derivedFrom(field: "support")
}
type VoteReceipt @entity(immutable: true) {
	id: ID!
	proposal: Proposal!
	voter: Account!
	support: ProposalSupport!
	weight: BigInt!
	reason: String!
	params: Bytes
}
type ProposalCreated implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
	proposer: Account!
}
type ProposalQueued implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
	eta: BigInt!
}
type ProposalExecuted implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
}
type ProposalCanceled implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
}
type VoteCast implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
	support: ProposalSupport!
	receipt: VoteReceipt!
	voter: Account!
}
interface Event {
	id: ID!
	transaction: Transaction!
	emitter: Account!
	timestamp: BigInt!
}
type Transaction @entity(immutable: true) {
	id: ID!
	timestamp: BigInt!
	blockNumber: BigInt!
	events: [Event!]! @derivedFrom(field: "transaction")
}
